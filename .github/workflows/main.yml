name: Maven Build with SonarQube

on:
  workflow_dispatch:   # Enables manual trigger only
  # push:
  #   branches:
  #     - main
  # pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONARQUBE_HOST: ${{ secrets.SONARQUBE_HOST }}   # e.g., http://54.237.235.133:9000
      SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }} # SonarQube token stored in GitHub secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout SCM
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Clean
        run: mvn clean

      - name: SonarQube Scan
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=maven-project \
            -Dsonar.host.url="${{ env.SONARQUBE_HOST }}" \
            -Dsonar.login="${{ env.SONARQUBE_TOKEN }}"

      - name: Wait for Quality Gate
        run: |
          echo "⏳ Waiting for SonarQube Quality Gate result..."
          sleep 30
          STATUS=$(curl -s -u ${{ env.SONARQUBE_TOKEN }}: \
            "${{ env.SONARQUBE_HOST }}/api/qualitygates/project_status?projectKey=maven-project" \
            | jq -r '.projectStatus.status')

          echo "Quality Gate Status: $STATUS"

          if [ "$STATUS" != "OK" ]; then
            echo "❌ Pipeline failed due to not meeting SonarQube Quality Gate requirements."
            exit 1
          else
            echo "✅ Quality Gate Passed!"
          fi
